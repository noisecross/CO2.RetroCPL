/**
* |------------------------------------------|
* | CO2 6502, COMPILER OPTIMIZER TO 6502     |
* | File: test13.rcc                         |
* | v1.0, Feb 2021                           |
* | Author: Emilio Arango Delgado de Mendoza |
* |------------------------------------------|
*/

/**
 * ------------------------------------------
 *
 * Loops & forks
 *
 * ------------------------------------------
 */

void selectionIFELSE(byte);
void selectionCASE(byte);
void selectionAdvanced(byte);

void iterationWHILE();
void iterationDO_WHILE();
void iterationFOR0();
void iterationFOR2();
void iterationFOR3();

word globalVar;

void main() {

	selectionIFELSE(4);
	selectionCASE(16);

	iterationWHILE();
	selectionAdvanced(3);
	iterationDO_WHILE();
	iterationFOR0();
	iterationFOR2();
	iterationFOR3();
	
	*((volatile byte*)0x0406) = *((volatile byte*)0x0405) = 1;
	
	/*
	********************
	* EXPECTED RESULTS *
	********************
	
	0x0400 to 0x040C = 1
	
	*/
}

void selectionIFELSE(byte i){
	byte k;
	
	if (i < 0){
		k = i;
		k = k + i + 5;
	}
	else
	{
		*((volatile byte*)0x0400) = 1;
	}
}

void selectionCASE(byte i){

	byte j;
	
	switch(i){	
		case 1 :
			j = 2;
			*((volatile byte*)0x0401) = 2;
			break;
		case 2 :
		case 3 :
			j = 5;
			*((volatile byte*)0x0401) = 2;
			break;
		case 4 :
			j = i;
			*((volatile byte*)0x0401) = 2;
			break;
		default :
			j = 1;
			*((volatile byte*)0x0401) = j;
	}

}

void selectionAdvanced(byte i){

	byte j = 3;
	
	switch(i){
		case 1 :
			j = 2;
			break;
		case 2 :
		case 3 :
			j = 5;
			*((volatile byte*)0x0408) = i - 2;
			break;
		case 4 :
			if (i == 4) { break; }
			j = i;
			break;
		case 255 :
			switch(j){
				case  3 :
					j = 5;
					break;
				default :
					j = 6;
			}
		default :
			*((volatile byte*)0x0407) = 1;
			j = 10;
	}

}

void iterationWHILE(){

    unsigned word i = 0;
	byte j = 0;
	unsigned byte k = 0;
	
    while (i < 3){
        i++;
        continue;
        k = lobyte i;
	}
	*((volatile byte*)(0x0402 - 3 + i)) = 1;

    i = 0;
    while (i < 5){
        i++;
        k++;
	}
	*((volatile byte*)(0x0403 -5 + k)) = 1;
	*((volatile byte*)(0x0404)) = *((volatile byte*)0x0403);

	selectionAdvanced(j);

}

void iterationDO_WHILE(){

    byte i = 0;
	byte j = 0;
	word  k = 0;
	
    do{
        i++;
        continue;
        k = i;
	} while (i < 3);

    i = 0;
    do{
        i++;
        k++;
	} while (i < 5);	 

	*((volatile unsigned byte*)0x0409) = lobyte (i - k + j + 1);
}

void iterationFOR0(){

	byte i;

	for ( ; ; ){
		i++;
		if (i > 10) { break; }
	}	

	*((volatile byte*)0x040A) = i - 10;
}

void iterationFOR2(){
	word  i;
	byte j = 0;
	
	for (i = 0 ; i < 10 ; ){
		i++;
		if (i > 5) { break; }
		j++;
	}
	
	*((volatile unsigned byte*)0x040B) = lobyte (i - j);
}

void iterationFOR3(){
	word  i;
	byte j = 0;
	
	for (i = 0 ; i < 10 ; i++ ){
		if (i > 5) { break; }
		j++;
	}
	
	*((volatile byte*)0x040C) = j - 5;
}

